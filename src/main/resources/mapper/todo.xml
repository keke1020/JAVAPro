<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mp.dao.todoDao">
	<resultMap type="todo" id="todoResult">
		<id column="ID" property="ID" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="user" property="user" jdbcType="VARCHAR" />
		<result column="tanto" property="tanto" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="end" property="end" jdbcType="INTEGER" />
		<result column="update" property="update" jdbcType="TIMESTAMP" />
		<result column="files" property="files" jdbcType="VARCHAR" />
		<result column="comment" property="comment" jdbcType="VARCHAR" />
		<result column="memo" property="memo" jdbcType="VARCHAR" />
		<result column="rireki" property="rireki" jdbcType="VARCHAR" />
	</resultMap>

	<select id="getTodoList" resultMap="todoResult">
		SELECT
		ID,
		title,
		memo,
		`update`,
		`user`,
		tanto,
		`status`,
		`end`,
		files,
		`comment`,
		rireki
		FROM
		list4
		where
		(`update` >= '0000-00-00')
		<if test="search_tanto != '' and search_tanto != null">
			and (`tanto` like concat('%',#{search_tanto},'%'))
		</if>
		<choose>
			<when test="end_flag == 1">
				AND `end` = 1
			</when>
			<when test="end_flag == 0">
				AND `end` = 0
			</when>
			<otherwise>
			</otherwise>
		</choose>
		<if test="search_condition != '' and search_condition != null">
			and ((`title` like concat('%',#{search_condition},'%'))
			or
			(`memo` like concat('%',#{search_condition},'%'))
			or (`user` like
			concat('%',#{search_condition},'%'))
			or (`tanto` like
			concat('%',#{search_condition},'%'))
			or (`status` like
			concat('%',#{search_condition},'%'))
			or (`files` like
			concat('%',#{search_condition},'%')))
		</if>
		order by ID desc
		LIMIT #{offset}, #{limit}
	</select>

	<select id="getTodoById" resultMap="todoResult">
		SELECT
		ID,
		title,
		memo,
		`update`,
		`user`,
		tanto,
		`status`,
		`end`,
		case
		 when `end` = 0 then '未完了'
			when `end` = 1 then '完了'
		end as endFlag,
		files,
		`comment`,
		rireki
		FROM
		list4
		where `ID` = #{id}
	</select>

	<select id="getTotal" resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		list4
		where
		(`update` >= '0000-00-00')
		<if test="search_tanto != '' and search_tanto != null">
			and (`tanto` like concat('%',#{search_tanto},'%'))
		</if>
		<choose>
			<when test="end_flag == 1">
				AND `end` = 1
			</when>
			<when test="end_flag == 0">
				AND `end` = 0
			</when>
			<otherwise>
			</otherwise>
		</choose>
		<if test="search_condition != '' and search_condition != null">
			and ((`title` like concat('%',#{search_condition},'%'))
			or
			(`memo` like concat('%',#{search_condition},'%'))
			or (`user` like
			concat('%',#{search_condition},'%'))
			or (`tanto` like
			concat('%',#{search_condition},'%'))
			or (`status` like
			concat('%',#{search_condition},'%'))
			or (`files` like
			concat('%',#{search_condition},'%')))
		</if>
	</select>

	<select id="getCommentById" resultType="java.lang.String">
		select comment from list4
		where `ID` = #{id}
	</select>

	<update id="updateComment" parameterType="com.mp.entity.todo">
		update list4 set
		`comment` = #{comment} where `ID` = #{id}
	</update>

	<update id="update" parameterType="com.mp.entity.todo">
		update list4
		<set>
			title=#{title},
			user=#{user},
			tanto=#{tanto},
			memo=#{memo},
			status=#{status},
			end=#{end},
			files=#{files}
		</set>
		where `ID` = #{ID}
	</update>

	<update id="updateByType" parameterType="com.mp.entity.todo">
		update list4
		<set>
			comment=#{comment},
			tanto=#{tanto},
			rireki=#{rireki},
		</set>
		where `ID` = #{ID}
	</update>

	<insert id="insert" parameterType="com.mp.entity.todo"
		useGeneratedKeys="true" keyProperty="ID" keyColumn="ID">
		insert into
		list4(`update`,
		`title`,
		`memo`,
		`user`,
		`tanto`,
		`status`,
		`end`,
		`files`)
		values(
		#{update},
		#{title},
		#{memo},
		#{user},
		#{tanto},
		#{status},
		#{end},
		#{files}
		)
	</insert>

	<delete id="deleteById">
		DELETE FROM list4 WHERE `ID` = #{id}
	</delete>

</mapper>