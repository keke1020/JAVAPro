<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mp.dao.zaikorirekiDao">
	<resultMap type="zaikorireki" id="zaikorirekiResult">
		<id column="ID" property="ID" jdbcType="INTEGER" />
		<result column="update" property="update" jdbcType="VARCHAR" />
		<result column="message" property="message" jdbcType="VARCHAR" />
		<result column="user" property="user" jdbcType="VARCHAR" />
		<result column="user_id" property="user_id" jdbcType="INTEGER" />
		<result column="result" property="result" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />

		<result column="code" property="code" jdbcType="VARCHAR" />
	</resultMap>

	<!-- dao接口方法提供sql语句配置 -->
	<select id="getShiGuRirekiByView" resultMap="zaikorirekiResult">
		SELECT * FROM
		`zaikorireki` WHERE `type` = 'shingu' AND
		(`update` REGEXP #{condition}
		OR `message` REGEXP #{condition} OR
		`result` REGEXP #{condition} OR
		`user` REGEXP #{condition})
		ORDER BY `update` DESC
		LIMIT #{count}
	</select>

	<insert id="insert" parameterType="com.mp.entity.zaikorireki"
		useGeneratedKeys="true" keyProperty="ID">
		insert into `zaikorireki`
		(
		`update`,
		`message`,
		`user`,
		`user_id`,
		`type`
		)
		values(
		#{update},
		#{message},
		#{user},
		#{user_id},
		#{type}
		)
	</insert>

	<select id="getRirekiByView" resultMap="zaikorirekiResult">
		SELECT * FROM
		`zaikorireki` WHERE `type` = 'zaiko' AND
		(`update` REGEXP #{condition}
		OR `message` REGEXP #{condition} OR
		`result` REGEXP #{condition} OR
		`user` REGEXP #{condition})
		ORDER BY `update` DESC
		LIMIT #{count}
	</select>

	<insert id="insertAllNagoya" parameterType="java.util.ArrayList">
		insert into `nagoyarireki`
		(
		`update`,
		`code`,
		`message`,
		`user`
		)
		values
		<foreach collection="zaikorireki" item="item" index="index"
			separator=",">
			(
			#{item.update},
			#{item.code},
			#{item.message},
			#{item.user}
			)
		</foreach>
	</insert>

	<select id="getNagoyaRireki" resultMap="zaikorirekiResult">
		select * from nagoyarireki
		where 1=1
		<if test="code != null and code != ''">
			AND (`code` REGEXP #{code})
		</if>
		<choose>
            <when test="update_s != '' and update_e != ''">
            	AND `update` &gt;= #{update_s}
				AND `update` &lt;= #{update_e}
            </when>
            <when test="update_s != '' and update_e == ''">
            	AND `update` &gt;= #{update_s}
            </when>
            <when test="update_s == '' and update_e != ''">
				AND `update` &lt;= #{update_e}
            </when>
            <otherwise>
            </otherwise>
        </choose>
		<choose>
			<when test="order == '順序選択'">
				order by `update` desc
			</when>
			<when test="order == 'アップデート順' ">
				order by `update` desc
			</when>
			<when test="order == 'コード昇順' ">
				order by `code`
			</when>
			<when test="order == 'コード降順' ">
				order by `code` desc
			</when>
		</choose>
		LIMIT #{offset}, #{limit}
	</select>

	<select id="getNagoyaRireki_total" resultType="java.lang.Integer">
		select count(*) from nagoyarireki
		where 1=1
		<if test="code != null and code != ''">
			AND (`code` REGEXP #{code})
		</if>
		<choose>
            <when test="update_s != '' and update_e != ''">
            	AND `update` &gt;= #{update_s}
				AND `update` &lt;= #{update_e}
            </when>
            <when test="update_s != '' and update_e == ''">
            	AND `update` &gt;= #{update_s}
            </when>
            <when test="update_s == '' and update_e != ''">
				AND `update` &lt;= #{update_e}
            </when>
            <otherwise>
            </otherwise>
        </choose>
		<choose>
			<when test="order == '順序選択'">
				order by `update` desc
			</when>
			<when test="order == 'アップデート順' ">
				order by `update` desc
			</when>
			<when test="order == 'コード昇順' ">
				order by `code`
			</when>
			<when test="order == 'コード降順' ">
				order by `code` desc
			</when>
		</choose>
	</select>

</mapper>