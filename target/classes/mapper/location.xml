<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mp.dao.locationDao">
	<resultMap type="location" id="locationResult">
		<id column="ID" property="ID" jdbcType="INTEGER" />
		<result column="update" property="update" jdbcType="TIMESTAMP" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="tag" property="tag" jdbcType="VARCHAR" />
		<result column="dcode" property="dcode" jdbcType="VARCHAR" />
		<result column="sw" property="sw" jdbcType="VARCHAR" />
		<result column="sw2" property="sw2" jdbcType="VARCHAR" />
		<result column="kaisou" property="kaisou" jdbcType="VARCHAR" />
		<result column="tana" property="tana" jdbcType="VARCHAR" />
		<result column="ksize" property="ksize" jdbcType="VARCHAR" />
		<result column="sp" property="sp" jdbcType="VARCHAR" />
		<result column="t_kbn" property="t_kbn" jdbcType="VARCHAR" />
		<result column="user" property="user" jdbcType="VARCHAR" />
		<result column="user_id" property="user_id" jdbcType="INTEGER" />
		<result column="flag" property="flag" jdbcType="VARCHAR" />
		<result column="moto" property="moto" jdbcType="VARCHAR" />
		<result column="zaiko" property="zaiko" jdbcType="INTEGER" />
		<result column="hikiate" property="hikiate" jdbcType="INTEGER" />
		<result column="yoyaku" property="yoyaku" jdbcType="VARCHAR" />
		<result column="zaiko_update" property="zaiko_update"
			jdbcType="TIMESTAMP" />
		<result column="sZaiko" property="sZaiko" jdbcType="INTEGER" />
		<result column="sBikou" property="sBikou" jdbcType="VARCHAR" />
		<result column="sTanto" property="sTanto" jdbcType="VARCHAR" />
	</resultMap>

	<select id="getlocation" resultMap="locationResult">
		SELECT
		ID,
		`UPDATE`,
		`CODE`,
		`name`,
		tag,
		dcode,
		sw,
		sw2,
		kaisou,
		tana,
		ksize,
		sp,
		t_kbn,
		`user`,
		user_id,
		flag,
		moto,
		zaiko,
		hikiate,
		yoyaku,
		zaiko_update,
		sZaiko,
		sBikou,
		sTanto
		FROM
		location
		WHERE 1 = 1
		<if test="commonFlag == 'false'">
			AND (`update` >= '0000-00-00')
		</if>

		<if test="searchFlag == 'true'">
			<choose>
				<when test="istana == 'false'">
					AND `kaisou` = '' AND `tana` = '' AND `yoyaku` = '0'
				</when>
				<otherwise>
					<if test="codeSc != null and codeSc != ''">
						AND ((`code` REGEXP #{codeSc}) OR (`dcode` REGEXP
						#{codeSc}) OR
						(`name` REGEXP #{codeSc}))
					</if>
				</otherwise>
			</choose>
			<if test="kosuSC1 != null and kosuSC1 != ''">
				AND (`Zaiko` &gt;= #{kosuSC1})
			</if>
			<if test="kosuSC2 != null and kosuSC2 != ''">
				AND (`Zaiko` &lt;= #{kosuSC2})
			</if>
			<if test="kaisosc != null and kaisosc != ''">
				AND ((`kaisou` = #{kaisosc}))
			</if>
			<if test="tanaSc != null and tanaSc != ''">
				AND ((`tana` = #{tanaSc}))
			</if>
			<if test="t_kbn == 'true'">
				AND (`t_kbn` = '取扱中')
			</if>
			<if test="singuZaiko == 'true'">
				AND (`sZaiko` > 0)
			</if>
		</if>
		<choose>
			<when test="orderSC == '順序選択'">
				order by `update` desc
			</when>
			<when test="orderSC == 'アップデート順' ">
				order by `update` desc
			</when>
			<when test="orderSC == 'コード昇順' ">
				order by `code`
			</when>
			<when test="orderSC == 'コード降順' ">
				order by `code` desc
			</when>
			<when test="orderSC == '棚番昇順' ">
				order by `tana`
			</when>
		</choose>
		<if test="limitFlag == 'true'">
			LIMIT #{offset}, #{limit}
		</if>
	</select>

	<select id="getLocationCountById" resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		location
		WHERE
		`ID` = #{id}
	</select>

	<select id="getLocationCountByIds"
		resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		location
		WHERE
		`ID` in
		<foreach collection="ids" item="id" index="index" open="("
			close=")" separator=",">
			#{id}
		</foreach>
	</select>

	<select id="getLocationCountByCodes"
		resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		location
		WHERE
		`code` in
		<foreach collection="codes" item="code" index="index" open="("
			close=")" separator=",">
			#{code}
		</foreach>
	</select>

	<select id="getLocationById" resultMap="locationResult">
		SELECT
		ID,
		`UPDATE`,
		`CODE`,
		`name`,
		tag,
		dcode,
		sw,
		sw2,
		kaisou,
		tana,
		ksize,
		sp,
		t_kbn,
		`user`,
		user_id,
		flag,
		moto,
		zaiko,
		hikiate,
		yoyaku,
		zaiko_update,
		sZaiko,
		sBikou,
		sTanto
		FROM
		location
		WHERE
		`ID` = #{id}
	</select>

	<select id="getLocationByIds" resultMap="locationResult">
		SELECT
		ID,
		`UPDATE`,
		`CODE`,
		`name`,
		tag,
		dcode,
		sw,
		sw2,
		kaisou,
		tana,
		ksize,
		sp,
		t_kbn,
		`user`,
		user_id,
		flag,
		moto,
		zaiko,
		hikiate,
		yoyaku,
		zaiko_update,
		sZaiko,
		sBikou,
		sTanto
		FROM
		location
		WHERE
		`ID` in
		<foreach collection="ids" item="id" index="index" open="("
			close=")" separator=",">
			#{id}
		</foreach>
	</select>

	<select id="getTotal" resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		location
		WHERE
		(`update` >= '0000-00-00')
		<if test="searchFlag == 'true'">
			<choose>
				<when test="istana == 'false'">
					AND `kaisou` = '' AND `tana` = '' AND `yoyaku` = '0'
				</when>
				<otherwise>
					<if test="codeSc != null and codeSc != ''">
						AND ((`code` REGEXP #{codeSc}) OR (`dcode` REGEXP
						#{codeSc}) OR
						(`name` REGEXP #{codeSc}))
					</if>
				</otherwise>
			</choose>
			<if test="kosuSC1 != null and kosuSC1 != ''">
				AND (`Zaiko` &gt;= #{kosuSC1})
			</if>
			<if test="kosuSC2 != null and kosuSC2 != ''">
				AND (`Zaiko` &lt;= #{kosuSC2})
			</if>
			<if test="kaisosc != null and kaisosc != ''">
				AND ((`kaisou` = #{kaisosc}))
			</if>
			<if test="tanaSc != null and tanaSc != ''">
				AND ((`tana` = #{tanaSc}))
			</if>
			<if test="t_kbn == 'true'">
				AND (`t_kbn` = '取扱中')
			</if>
			<if test="singuZaiko == 'true'">
				AND (`sZaiko` > 0)
			</if>
		</if>
		<choose>
			<when test="orderSC == '順序選択'">
				order by `update` desc
			</when>
			<when test="orderSC == '順序選択' and searchFlag == 'true' ">
				order by `code`
			</when>
			<when test="orderSC == 'アップデート順' ">
				order by `update` desc
			</when>
			<when test="orderSC == 'コード昇順' ">
				order by `code`
			</when>
			<when test="orderSC == 'コード降順' ">
				order by `code` desc
			</when>
			<when test="orderSC == '棚番昇順' ">
				order by `tana` desc
			</when>
		</choose>
	</select>

	<select id="getChangeCount" resultType="java.lang.Integer">
		SELECT count(`flag`) FROM
		`location` WHERE `flag` = ''
	</select>

	<update id="editlocation" parameterType="com.mp.entity.location">
		UPDATE `location`
		<trim prefix="set" suffixOverrides=",">
				<!-- when test="router_index == 'one'"> -->
					`update` = #{update},
					`kaisou` = #{kaisou},
					`tana` =
					#{tana},
					`sw` = #{sw},
					`user` = #{user},
					`moto` = #{moto},
					`sZaiko` = #{sZaiko},
					`sBikou` = #{sBikou},
				<!--/when -->
		</trim>
		WHERE `ID` = #{ID}
	</update>

	<delete id="deleteLocationByIds">
		DELETE FROM
		location
		WHERE
		`ID` in
		<foreach collection="ids" item="id" index="index" open="("
			close=")" separator=",">
			#{id}
		</foreach>
	</delete>

	<insert id="updateByCSV1" parameterType="java.util.ArrayList">
		insert into `location`
		(
		`zaiko_update`,
		`code`,
		`zaiko`,
		`hikiate`,
		`yoyaku`,
		`t_kbn`
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.zaiko_update},
			#{item.code},
			#{item.zaiko},
			#{item.hikiate},
			#{item.yoyaku},
			#{item.t_kbn}
			)
		</foreach>
		ON DUPLICATE KEY UPDATE
		`zaiko_update`=VALUES(`zaiko_update`),`zaiko`=VALUES(`zaiko`),`hikiate`=VALUES(`hikiate`),`yoyaku`=VALUES(`yoyaku`),`t_kbn`=VALUES(`t_kbn`)
	</insert>

	<insert id="updateByCSV2" parameterType="java.util.ArrayList">
		insert into `location`
		(
		`update`,
		`code`,
		`name`,
		`dcode`,
		`tag`,
		`sw`,
		`kaisou`,
		`tana`,
		`ksize`,
		`sp`,
		`sZaiko`,
		`sBikou`,
		`user`,
		`user_id`
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.update},
			#{item.code},
			#{item.name},
			#{item.dcode},
			#{item.tag},
			#{item.sw},
			#{item.kaisou},
			#{item.tana},
			#{item.ksize},
			#{item.sp},
			#{item.sZaiko},
			#{item.sBikou},
			#{item.user},
			#{item.user_id}
			)
		</foreach>
		ON DUPLICATE
		KEY UPDATE
		`update`=VALUES(`update`),`name`=VALUES(`name`),`dcode`=VALUES(`dcode`),`tag`=VALUES(`tag`),`sw`=VALUES(`sw`),`kaisou`=VALUES(`kaisou`),`tana`=VALUES(`tana`),`ksize`=VALUES(`ksize`),`sp`=VALUES(`sp`),`sZaiko`=VALUES(`sZaiko`),`sBikou`=VALUES(`sBikou`),`user`=VALUES(`user`)
	</insert>

	<insert id="updateByCSV3" parameterType="java.util.ArrayList">
		insert into `location`
		(
		`update`,
		`code`,
		`name`,
		`dcode`,
		`tag`,
		`kaisou`,
		`tana`,
		`user`,
		`user_id`
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.update},
			#{item.code},
			#{item.name},
			#{item.dcode},
			#{item.tag},
			#{item.kaisou},
			#{item.tana},
			#{item.user},
			#{item.user_id}
			)
		</foreach>
		ON DUPLICATE KEY UPDATE
		`update`=VALUES(`update`),`name`=VALUES(`name`),`dcode`=VALUES(`dcode`),`tag`=VALUES(`tag`),`kaisou`=VALUES(`kaisou`),`tana`=VALUES(`tana`),`user`=VALUES(`user`)
	</insert>

	<insert id="insertByCSV1" parameterType="java.util.ArrayList">
	insert into `location`
		(
		`update`,
		`code`,
		`name`,
		`dcode`,
		`tag`,
		`user`,
		`user_id`,
		`kaisou`,
		`tana`)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.update},
			#{item.code},
			#{item.name},
			#{item.dcode},
			#{item.tag},
			#{item.user},
			#{item.user_id},
			#{item.kaisou},
			#{item.tana}
			)
		</foreach>
	</insert>

	<insert id="insertByCSV2" parameterType="java.util.ArrayList">
		insert into `location`
		(
		`update`,
		`code`,
		`name`,
		`dcode`,
		`tag`,
		`sw`,
		`kaisou`,
		`tana`,
		`ksize`,
		`sp`,
		`sZaiko`,
		`sBikou`,
		`user`,
		`user_id`
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.update},
			#{item.code},
			#{item.name},
			#{item.dcode},
			#{item.tag},
			#{item.sw},
			#{item.kaisou},
			#{item.tana},
			#{item.ksize},
			#{item.sp},
			#{item.sZaiko},
			#{item.sBikou},
			#{item.user},
			#{item.user_id}
			)
		</foreach>
	</insert>

	<delete id="deleteByCSV">
		DELETE FROM `location`
		WHERE `code` IN
		(
		<foreach collection="list" item="item" index="index"
			separator=",">
			#{item.code}
		</foreach>
		)
	</delete>

<update id="updateShinguByCode" parameterType="com.mp.entity.location">
		UPDATE `location` set`sZaiko` = #{sZaiko}, `user_id` = #{user_id} WHERE `code` = #{code}
	</update>

</mapper>